import type { NextApiRequest, NextApiResponse } from 'next';
export default async function handler(req:NextApiRequest,res:NextApiResponse){if(req.method!=='POST')return res.status(405).json({error:'Use POST'});try{const {imageBase64}=req.body||{};if(!imageBase64)return res.status(400).json({error:'imageBase64 required'});const key=process.env.GOOGLE_VISION_API_KEY;if(!key)return res.status(500).json({error:'Vision key missing'});const body={requests:[{image:{content:imageBase64.split(',').pop()},features:[{type:'TEXT_DETECTION'}]}]};const r=await fetch(`https://vision.googleapis.com/v1/images:annotate?key=${key}`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(body)});res.status(200).json(await r.json());}catch(e:any){res.status(500).json({error:e.message||'Server error'});}}
