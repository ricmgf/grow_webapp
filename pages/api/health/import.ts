import type { NextApiRequest, NextApiResponse } from 'next';
import { createClient } from '@supabase/supabase-js';
const supabase = createClient(process.env.NEXT_PUBLIC_SUPABASE_URL!, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!);
export default async function handler(req:NextApiRequest,res:NextApiResponse){if(req.method!=='POST')return res.status(405).json({error:'Use POST'});try{const {user_id,hk_type,start_time,end_time,duration_min,kcal,distance_km,payload}=req.body||{};if(!user_id||!hk_type||!start_time||!duration_min){return res.status(400).json({error:'Missing fields: user_id, hk_type, start_time, duration_min'});}const {error:insErr}=await supabase.from('apple_health_imports').insert({user_id,hk_type,start_time,end_time,duration_min,kcal,distance_km,payload});if(insErr)return res.status(400).json({error:insErr.message});const { data, error }=await supabase.rpc('merge_health_activity',{p_user:user_id,p_hk_type:hk_type,p_start:start_time,p_end:end_time,p_duration:duration_min,p_kcal:kcal,p_distance:distance_km,p_payload:payload||{}});if(error)return res.status(400).json({error:error.message});res.status(200).json({ok:true,activity_id:data});}catch(e:any){res.status(500).json({error:e.message||'Server error'});}}
